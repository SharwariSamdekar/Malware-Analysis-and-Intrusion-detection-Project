import os
import csv



#Write code to print headings and store the data directly in a list

headers = ['e_magic:','e_cblp:','e_cp:','e_crlc:','e_cparhdr:','e_minalloc:','e_maxalloc:','e_ss:','e_sp:','e_csum:','e_ip:','e_cs:','e_lfarlc:','e_ovno:','e_oemid:','e_oeminfo:','e_lfanew:','Machine:','NumberOfSections:','TimeDateStamp:','PointerToSymbolTable:',
'NumberOfSymbols:','SizeOfOptionalHeader:','Characteristics:','Magic:','MajorLinkerVersion:','MinorLinkerVersion:','SizeOfCode:','SizeOfInitializedData:','SizeOfUninitializedData:','AddressOfEntryPoint:','BaseOfCode:',
# headers.append(h2)
'BaseOfData:','ImageBase:','SectionAlignment:','FileAlignment:','MajorOperatingSystemVersion:','MinorOperatingSystemVersion:','MajorImageVersion:','MinorImageVersion:','MajorSubsystemVersion:','MinorSubsystemVersion:',
# headers.append(h3)
'Reserved1:','SizeOfImage:','SizeOfHeaders:','CheckSum:','Subsystem:','DllCharacteristics:','SizeOfStackReserve:','SizeOfStackCommit:','SizeOfHeapReserve:','SizeOfHeapCommit:','LoaderFlags:','NumberOfRvaAndSizes:']
# headers.append(h4)


print(headers)
def main():
	basepath = 'Benign/'
	f = open("BenOp.txt","w")
	cd = os.getcwd()
	for files in os.listdir(basepath):
		if os.path.isdir(os.path.join(basepath,files)) :
			dirn = os.path.join(basepath,files)
			ndir = os.chdir(dirn)
			for file in os.listdir(ndir) :
				if(file == "Structure_Info.txt") :
					with open("Structure_Info.txt",encoding = "utf8",errors = "ignore") as newfile :
						i = 0
						j = 0
						listfeat = list()
						for line in newfile :
							# print("checking for line "+line)
							for word in line.split():
								if i == 1 :
									listfeat.append(int(word,16))
									# print("appending "+word)
									i = 0
									continue
								if(j == 54) :
									break
								if word == headers[j] :
									i = 1
									j = j+1
									# print("word is present "+word+" Next header is "+headers[j])
					f.write("%s\n"%listfeat)
					print(len(listfeat))
			os.chdir(cd)
	f.close()





# Driver Code 
if __name__ == '__main__': 
      
    # Calling main() function 
    main() 


